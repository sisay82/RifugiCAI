@import '../style/typography';
@import '../style/vendor-prefixes';
@import '../style/palette';
@import '../style/theme';

$bc-button-min-width: 88px;

$bc-button-height-lg: 46px;
$bc-button-height: 36px;
$bc-button-height-sm: 32px;

$bc-button-margin: 6px;
$bc-button-padding-end: 8px;
$bc-button-border-radius: 2px;

@mixin bc-button-color($background, $foreground) {
  $lightness: lightness($background);
  $shade: #fff;

  @if ($lightness > 50) {
    $shade: #000;
  }
  // background: bc-color($palette);
  // color: bc-color($palette, default-contrast);
  background: $background;
  color: $foreground;

  &:hover, &:focus {
    background: mix($shade, $background, 12%);
    //color: mix(complement($shade), $foreground, 26%);
  }
  &:active {
    background: mix($shade, $background, 22%);
    //color: mix(complement($shade), $foreground, 26%);
  }
}

@mixin bc-button-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $info: map-get($theme, info);
  $success: map-get($theme, success);
  $warn: map-get($theme, warn);
  $danger: map-get($theme, danger);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .bc-button {
    @include bc-button-color(bc-color($background, raised-button), bc-color($foreground, text));
    box-shadow: 0px 0px 1px 0px rgba(black, 0.2),0px 1px 1px 0px rgba(black, 0.14),0px 1px 2px 0px rgba(black, 0.12);

    &.bc-primary {
      @include bc-button-color(bc-color($primary), bc-color($primary, default-contrast));
    }

    &.bc-accent {
      @include bc-button-color(bc-color($accent), bc-color($accent, default-contrast));
    }
    
    &.bc-info {
      @include bc-button-color(bc-color($info), bc-color($info, default-contrast));
    }
    &.bc-success {
      @include bc-button-color(bc-color($success), bc-color($success, default-contrast));
    }
    &.bc-warn {
      @include bc-button-color(bc-color($warn), bc-color($warn, default-contrast));
    }
    &.bc-danger {
      @include bc-button-color(bc-color($danger), bc-color($danger, default-contrast));
    }

    &[disabled], &[data-disabled] {
      background: bc-color($background, disabled);
      color: bc-color($foreground, disabled);
    }
  }
}

// Base button styles common to all button types.
.bc-button {
  position: relative;
  z-index: 0;
  
  display: inline-block;
  
  // Sizing
  min-width: $bc-button-min-width;
  height: $bc-button-height;
  margin: $bc-button-margin;
  padding: 0px $bc-button-padding-end;

  // Reset agent button style
  outline:none;
  border: none;
  border-radius: $bc-button-border-radius;
  
  cursor: pointer;
  
  @include touch-action(manipulation);
  @include user-select(none);
  
  // Make anchors and buttons render like the same.
  @include bc-typography-scale-to-styles(bc-typographic-scale(), 'button');

  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  text-transform: none;
  font-kerning: none;

  text-decoration: none;
  &:hover, &:focus {
    color: currentColor;
    text-decoration: none;
  }
  
  transition: all .15s ease-in-out;

  & .bc-button-inner {
    @include flex-box();
    @include flex-flow (row);
    
    height:100%;
    margin: 0px $bc-button-padding-end;

    overflow: hidden;

    flex-shrink: 0;
    align-items: center;
    justify-content: center;
  }

  //Disable button
  &[disabled], &[data-disabled] {
    cursor: default;
    box-shadow: none;
    pointer-events: none;
  }

  //Button size
  &.bc-outline {
    background-color: transparent;
    border-color: currentColor;
    border-style: solid;
    border-width: 1px;
    color: currentColor;
  }

  &.bc-clear {
    background-color: transparent;
    border-color: currentColor;
    border-style: none;
    border-width: 0px;
    color: currentColor;
    text-transform: uppercase;
    box-shadow: none;
  }

  //Button size
  &.bc-lg {
    height: $bc-button-height-lg;
    @include bc-typography-scale-to-styles(bc-typographic-scale(), 'button-lg');
    border-radius: $bc-button-border-radius+$bc-button-border-radius;
  }

  &.bc-sm {
    height: $bc-button-height-sm;
    @include bc-typography-scale-to-styles(bc-typographic-scale(), 'button-sm');
  }
}
